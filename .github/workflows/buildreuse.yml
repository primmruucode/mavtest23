name: Build and Deploy to Sandbox

on:
  workflow_call:
    inputs:
      path_to_settings:
        description: path to settings.xml file from root
        type: string
        required: true
      
      path_to_pom:
        description: path to pom file
        type: string
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
        
    - name: Copy settings.xml
      run: cp ${{ inputs.path_to_settings }} $HOME/.m2/settings.xml
    
    - name: check settings.xml 2
      run: cat $HOME/.m2/settings.xml
    - name: Build with Maven
      run: mvn -B package --file ${{ inputs.path_to_pom }}
      
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.anypoint_platform_username }}
        PASSWORD: ${{ secrets.anypoint_platform_password }}
       # KEY: ${{ secrets.decryption_key }}
      run: echo "kk"
   #   run: |
      #  artifactName=$(ls *.jar | head -1)
     #   mvn mule:deploy \
     #   -Dmule.artifact=$artifactName \
      #   -Danypoint.username="$USERNAME" \
     #    -Danypoint.password="$PASSWORD"
# artifactName=$(ls *.jar | head -1) mvn mule:deploy -Dmule.artifact=$artifactName -Dusername=$USERNAME -Dpassword=$PASSWORD
